{"ast":null,"code":"import { ElementPageRequest } from '@shared/models/element-page-request';\nimport { ElementPageResponse } from '@shared/models/element-page-response';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@base/services/web-api/menu/menu.service\";\nimport * as i3 from \"@base/services/web-api/element-page/element-page.service\";\nimport * as i4 from \"@angular/common\";\n\nfunction MenuItemAdminComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"label\");\n    i0.ɵɵtext(2, \"\\u0422\\u0435\\u043A\\u0441\\u0442\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"input\", 3);\n    i0.ɵɵlistener(\"change\", function MenuItemAdminComponent_div_4_Template_input_change_3_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const elementPageResponse_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.onNameChangeEvent($event, elementPageResponse_r1);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"br\");\n    i0.ɵɵelementStart(5, \"label\");\n    i0.ɵɵtext(6, \"\\u041F\\u043E\\u0441\\u0438\\u043B\\u0430\\u043D\\u043D\\u044F\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"input\", 4);\n    i0.ɵɵlistener(\"change\", function MenuItemAdminComponent_div_4_Template_input_change_7_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const elementPageResponse_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.onHrefChangeEvent($event, elementPageResponse_r1);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"br\");\n    i0.ɵɵelementStart(9, \"label\");\n    i0.ɵɵtext(10, \"\\u041F\\u043E\\u0441\\u0438\\u043B\\u0430\\u043D\\u043D\\u044F \\u043D\\u0430 \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0443\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"input\", 4);\n    i0.ɵɵlistener(\"change\", function MenuItemAdminComponent_div_4_Template_input_change_11_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const elementPageResponse_r1 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.onImgChangeEvent($event, elementPageResponse_r1);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(12, \"br\");\n    i0.ɵɵelementStart(13, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function MenuItemAdminComponent_div_4_Template_button_click_13_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const elementPageResponse_r1 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.remove(elementPageResponse_r1);\n    });\n    i0.ɵɵtext(14, \" \\u0412\\u0438\\u0434\\u0430\\u043B\\u0438\\u0442\\u0438 \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(15, \"br\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const elementPageResponse_r1 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"value\", elementPageResponse_r1.text);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"value\", elementPageResponse_r1.href);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"value\", elementPageResponse_r1.imgUrl);\n  }\n}\n\nexport let MenuItemAdminComponent = /*#__PURE__*/(() => {\n  class MenuItemAdminComponent {\n    constructor(route, menuService, elementPageService) {\n      this.route = route;\n      this.menuService = menuService;\n      this.elementPageService = elementPageService;\n      this.elementPageResponses = [];\n    }\n\n    ngOnInit() {\n      this.route.params.subscribe(params => {\n        this.params = params;\n        this.menuService.getMenuItemAsync(this.params['id']).subscribe(result => {\n          this.name = result.name;\n          this.menuId = result.id;\n        });\n        this.elementPageService.getElementPageAsync(this.params['id']).subscribe(result => {\n          this.elementPageResponses = result;\n          console.log(this.elementPageResponses);\n        });\n      });\n    }\n\n    remove(informationOpen) {\n      this.elementPageResponses.forEach((element, index) => {\n        if (element == informationOpen) this.elementPageResponses.splice(index, 1);\n      });\n      this.elementPageService.deleteElementPageAsync(informationOpen.id).subscribe();\n    }\n\n    add() {\n      var elementPageResponse = new ElementPageResponse();\n      elementPageResponse.text = 'Назва за замовчуванням';\n      elementPageResponse.href = 'Ссилка за замовчуванням';\n      elementPageResponse.imgUrl = 'Посилання на картинку за замовченням';\n      elementPageResponse.menuId = this.menuId;\n      this.elementPageResponses.push(elementPageResponse);\n      var request = new ElementPageRequest();\n      request.text = elementPageResponse.text;\n      request.href = elementPageResponse.href;\n      request.imgUrl = elementPageResponse.imgUrl;\n      request.menuId = elementPageResponse.menuId;\n      this.elementPageService.createElementPageAsync(request).subscribe(result => elementPageResponse.id = result);\n    }\n\n    onNameChangeEvent(event, elementPageResponse) {\n      elementPageResponse.text = event.target.value;\n      var request = new ElementPageResponse();\n      request.id = elementPageResponse.id;\n      request.text = elementPageResponse.text;\n      request.href = elementPageResponse.href;\n      request.imgUrl = elementPageResponse.imgUrl;\n      request.menuId = elementPageResponse.menuId;\n      this.elementPageService.updateElementPageAsync(request).subscribe(result => elementPageResponse = result);\n    }\n\n    onHrefChangeEvent(event, elementPageResponse) {\n      elementPageResponse.href = event.target.value;\n      var request = new ElementPageResponse();\n      request.id = elementPageResponse.id;\n      request.text = elementPageResponse.text;\n      request.href = elementPageResponse.href;\n      request.imgUrl = elementPageResponse.imgUrl;\n      request.menuId = elementPageResponse.menuId;\n      this.elementPageService.updateElementPageAsync(request).subscribe(result => elementPageResponse = result);\n    }\n\n    onImgChangeEvent(event, elementPageResponse) {\n      elementPageResponse.imgUrl = event.target.value;\n      var request = new ElementPageResponse();\n      request.id = elementPageResponse.id;\n      request.text = elementPageResponse.text;\n      request.href = elementPageResponse.href;\n      request.imgUrl = elementPageResponse.imgUrl;\n      request.menuId = elementPageResponse.menuId;\n      this.elementPageService.updateElementPageAsync(request).subscribe(result => elementPageResponse = result);\n    }\n\n  }\n\n  MenuItemAdminComponent.ɵfac = function MenuItemAdminComponent_Factory(t) {\n    return new (t || MenuItemAdminComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.MenuService), i0.ɵɵdirectiveInject(i3.ElementPageService));\n  };\n\n  MenuItemAdminComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MenuItemAdminComponent,\n    selectors: [[\"app-menu-item-admin\"]],\n    decls: 8,\n    vars: 2,\n    consts: [[1, \"content\"], [4, \"ngFor\", \"ngForOf\"], [1, \"add\", 3, \"click\"], [\"type\", \"text\", 1, \"name\", 3, \"value\", \"change\"], [\"type\", \"text\", 3, \"value\", \"change\"], [1, \"remove\", 3, \"click\"]],\n    template: function MenuItemAdminComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"h3\");\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(3, \"hr\");\n        i0.ɵɵtemplate(4, MenuItemAdminComponent_div_4_Template, 16, 3, \"div\", 1);\n        i0.ɵɵelement(5, \"br\");\n        i0.ɵɵelementStart(6, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function MenuItemAdminComponent_Template_button_click_6_listener() {\n          return ctx.add();\n        });\n        i0.ɵɵtext(7, \"\\u0414\\u043E\\u0434\\u0430\\u0442\\u0438\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.name);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.elementPageResponses);\n      }\n    },\n    directives: [i4.NgForOf],\n    styles: [\".content[_ngcontent-%COMP%]{margin:20px 0;color:#6f029e}.content[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{width:15%;font-weight:700}.content[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{width:80%;margin:10px 0}.content[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]   input.name[_ngcontent-%COMP%]{font-weight:700}.content[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]   .remove[_ngcontent-%COMP%]{background-color:red;color:#fff;border-radius:10px;padding:10px 20px;margin:10px 0}.content[_ngcontent-%COMP%]   .add[_ngcontent-%COMP%]{background-color:green;color:#fff;border-radius:10px;padding:10px 20px}\"]\n  });\n  return MenuItemAdminComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}