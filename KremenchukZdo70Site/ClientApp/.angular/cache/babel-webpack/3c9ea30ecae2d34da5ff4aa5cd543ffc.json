{"ast":null,"code":"import { tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@auth0/angular-jwt\";\nimport * as i3 from \"@angular/router\";\nexport const ACCESS_TOKEN_KEY = 'access_token';\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(http, jwtHelper, baseUrl, router) {\n      this.http = http;\n      this.jwtHelper = jwtHelper;\n      this.baseUrl = baseUrl;\n      this.router = router;\n    }\n\n    login(request) {\n      return this.http.post(`${this.baseUrl}api/Auth/login`, request).pipe(tap(token => {\n        localStorage.setItem(ACCESS_TOKEN_KEY, token.accessToken);\n      }));\n    }\n\n    isAuthenticated() {\n      var token = localStorage.getItem(ACCESS_TOKEN_KEY);\n      return token != null && !this.jwtHelper.isTokenExpired(token);\n    }\n\n    logout() {\n      localStorage.removeItem(ACCESS_TOKEN_KEY);\n      this.router.navigate(['']);\n    }\n\n  }\n\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.JwtHelperService), i0.ɵɵinject('BASE_URL'), i0.ɵɵinject(i3.Router));\n  };\n\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}