{"ast":null,"code":"import { ContactsDataRequest } from '@shared/models/contacts-data-request';\nimport { ContactsDataResponse } from '@shared/models/contacts-data-response';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@base/services/web-api/contacts/contacts.service\";\nimport * as i2 from \"@angular/common\";\n\nfunction ContactsAdminComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"input\", 2);\n    i0.ɵɵlistener(\"focusout\", function ContactsAdminComponent_div_4_Template_input_focusout_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const contact_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.onNameFocusOutEvent($event, contact_r1);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(2, \"br\");\n    i0.ɵɵelementStart(3, \"input\", 3);\n    i0.ɵɵlistener(\"focusout\", function ContactsAdminComponent_div_4_Template_input_focusout_3_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const contact_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.onValueFocusOutEvent($event, contact_r1);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"br\");\n    i0.ɵɵelementStart(5, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function ContactsAdminComponent_div_4_Template_button_click_5_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const contact_r1 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.remove(contact_r1);\n    });\n    i0.ɵɵtext(6, \"\\u0412\\u0438\\u0434\\u0430\\u043B\\u0438\\u0442\\u0438\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"br\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const contact_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", contact_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", contact_r1.value);\n  }\n}\n\nexport let ContactsAdminComponent = /*#__PURE__*/(() => {\n  class ContactsAdminComponent {\n    constructor(contactsService) {\n      this.contactsService = contactsService;\n      this.contacts = [];\n    }\n\n    ngOnInit() {\n      this.contactsService.getContactsAsync().subscribe(result => this.contacts = result);\n    }\n\n    remove(contact) {\n      this.contacts.forEach((element, index) => {\n        if (element == contact) this.contacts.splice(index, 1);\n      });\n      this.contactsService.deleteContactAsync(contact.id).subscribe();\n    }\n\n    add() {\n      var contact = new ContactsDataResponse();\n      contact.name = 'Назва за замовчуванням';\n      contact.value = 'Значення за замовчуванням';\n      this.contacts.push(contact);\n      var request = new ContactsDataRequest();\n      request.name = contact.name;\n      request.value = contact.value;\n      this.contactsService.createContactAsync(request).subscribe(result => contact.id = result);\n    }\n\n    onNameFocusOutEvent(event, contact) {\n      contact.name = event.target.value;\n      var request = new ContactsDataRequest();\n      request.id = contact.id;\n      request.name = contact.name;\n      request.value = contact.value;\n      this.contactsService.updateContactAsync(request).subscribe(result => contact = result);\n    }\n\n    onValueFocusOutEvent(event, contact) {\n      contact.value = event.target.value;\n      var request = new ContactsDataRequest();\n      request.id = contact.id;\n      request.name = contact.name;\n      request.value = contact.value;\n      this.contactsService.updateContactAsync(request).subscribe(result => contact = result);\n    }\n\n  }\n\n  ContactsAdminComponent.ɵfac = function ContactsAdminComponent_Factory(t) {\n    return new (t || ContactsAdminComponent)(i0.ɵɵdirectiveInject(i1.ContactsService));\n  };\n\n  ContactsAdminComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ContactsAdminComponent,\n    selectors: [[\"app-contacts-admin\"]],\n    decls: 8,\n    vars: 1,\n    consts: [[4, \"ngFor\", \"ngForOf\"], [1, \"add\", 3, \"click\"], [\"type\", \"text\", 1, \"name\", 3, \"value\", \"focusout\"], [\"type\", \"text\", 3, \"value\", \"focusout\"], [1, \"remove\", 3, \"click\"]],\n    template: function ContactsAdminComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\");\n        i0.ɵɵelementStart(1, \"h3\");\n        i0.ɵɵtext(2, \"\\u041A\\u043E\\u043D\\u0442\\u0430\\u043A\\u0442\\u043D\\u0430 \\u0456\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0456\\u044F\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(3, \"hr\");\n        i0.ɵɵtemplate(4, ContactsAdminComponent_div_4_Template, 8, 2, \"div\", 0);\n        i0.ɵɵelement(5, \"br\");\n        i0.ɵɵelementStart(6, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function ContactsAdminComponent_Template_button_click_6_listener() {\n          return ctx.add();\n        });\n        i0.ɵɵtext(7, \"\\u0414\\u043E\\u0434\\u0430\\u0442\\u0438\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.contacts);\n      }\n    },\n    directives: [i2.NgForOf],\n    styles: [\"div[_ngcontent-%COMP%]{padding:30px 10px 0}div[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{width:100%;margin:10px 0}div[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]   input.name[_ngcontent-%COMP%]{font-weight:700}div[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]   .remove[_ngcontent-%COMP%]{background-color:red;color:#fff;border-radius:10px;padding:10px 20px;margin:10px 0}div[_ngcontent-%COMP%]   .add[_ngcontent-%COMP%]{background-color:green;color:#fff;border-radius:10px;padding:10px 20px}\"]\n  });\n  return ContactsAdminComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}