{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@base/services/web-api/information-open/information-open.service\";\nimport * as i2 from \"@angular/common\";\n\nfunction InformationOpennessComponent_li_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵelementStart(1, \"a\", 2);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const information_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"href\", information_r1.href, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(information_r1.name);\n  }\n}\n\nexport let InformationOpennessComponent = /*#__PURE__*/(() => {\n  class InformationOpennessComponent {\n    constructor(informationOpenService) {\n      this.informationOpenService = informationOpenService;\n      this.informationOpens = [];\n    }\n\n    ngOnInit() {\n      this.informationOpenService.getInformationOpenAsync().subscribe(result => this.informationOpens = result);\n    }\n\n  }\n\n  InformationOpennessComponent.ɵfac = function InformationOpennessComponent_Factory(t) {\n    return new (t || InformationOpennessComponent)(i0.ɵɵdirectiveInject(i1.InformationOpenService));\n  };\n\n  InformationOpennessComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: InformationOpennessComponent,\n    selectors: [[\"app-information-openness\"]],\n    decls: 6,\n    vars: 1,\n    consts: [[1, \"content\"], [4, \"ngFor\", \"ngForOf\"], [\"target\", \"_blank\", 3, \"href\"]],\n    template: function InformationOpennessComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"h3\");\n        i0.ɵɵtext(2, \"\\u0406\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0456\\u0439\\u043D\\u0430 \\u0432\\u0456\\u0434\\u043A\\u0440\\u0438\\u0442\\u0456\\u0441\\u0442\\u044C\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(3, \"hr\");\n        i0.ɵɵelementStart(4, \"ul\");\n        i0.ɵɵtemplate(5, InformationOpennessComponent_li_5_Template, 3, 2, \"li\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.informationOpens);\n      }\n    },\n    directives: [i2.NgForOf],\n    styles: [\".content[_ngcontent-%COMP%]{margin:20px 0;color:#6f029e}\"]\n  });\n  return InformationOpennessComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}